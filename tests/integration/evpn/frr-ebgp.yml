message: |
  This test case builds a simple 1-node fabric with eBGP VXLAN to a pair of hosts. 
  The hosts are doing VLAN/VXLAN encap/decap, the single spine switch is an IP router running eBGP, and EVPN eBGP RR.

  Assuming the 'vxlan-bridging' test case succeeded, this test case
  validates that EVPN works with eBGP-only between hosts

  * both hosts on the same VLAN should be able to ping each other, e.g.
    docker exec -it clab-evpn-h1 vtysh -c "ping 172.16.0.2"

  To change the devices under test, use netlab up -d parameter

defaults:
 provider: clab
 device: srlinux
 interfaces.mtu: 1550 # Increased for VXLAN
 vxlan.start_vni: 20000

plugin: [ ebgp.utils ] # for allowas_in

# addressing:
#   p2p: # Use eBGP unnumbered, not supported by SRL
#     ipv4: True
#     ipv6: True

groups:
  hosts:
    members: [ h1, h2 ]
    device: frr
    module: [ vlan,vxlan,bgp,evpn ] # vrf
    node_data:
      bgp.as: 65002 # same AS on every host requires allowas_in
  spines:
    members: [ spine ]
    module: [ bgp,evpn ]
    node_data:
      bgp.rr: True # one way to pass eBGP EVPN routes between leaves
      bgp.as: 65001

# vrfs:
#  tenant:
#   evpn.transit_vni: True # FRR does not support asymmetrical

vlans:
 red:
  # vrf: tenant
  bgp: False
 blue:
  #  vrf: tenant
  bgp: False

bgp.as: 65000
evpn.vlans: [ red, blue ]

bgp.sessions: # create only eBGP sessions
  ipv4: [ ebgp ]
  ipv6: [ ebgp ]

evpn.session: ebgp

nodes:
  h1:
  h2:
   # bgp.as: 65003
  spine:
    bgp.rr: True
    # vlans:
    #  red:
    #  blue:

links:
- h1:
   bgp.allowas_in: True
  spine:
- h2:
   bgp.allowas_in: True
  spine:

# Stub links to emulate VMs
- h1:
  # vlan.trunk: [ red, blue ]
  vlan.access: red
- h2:
  # vlan.trunk: [ red, blue ]
  vlan.access: red
- h1:
  vlan.access: blue
- h2:
  vlan.access: blue
